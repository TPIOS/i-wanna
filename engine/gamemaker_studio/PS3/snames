//////////////
// Shader names
//////////////

// # = constant
// * = readonly
// & = obsolete

true#
false#
pi#

// types
const#
bool#
int#
void#
struct#
volatile#
extern#
vector#
uniform#
out#
double#
return#
in#
half#
float#
float2#
float3#
float4#
float4x4#
float3x3#
float2x2#
sampler#
sampler1D#
sampler2D#
sampler3D#
samplerCUBE#
sampler_state#
SamplerState#
SamplerComparisonState#
Texture1D#
Texture1D_Array#
Texture2D#
Texture2D_Array#
sampler3D#
sampler3D_Array#
samplerCUBE#
samplerCUBE_Array#
x#
y#
z#
w#
r#
g#
b#
a#
s#
t#
q#
p#
xyzw#
xyz#
xy#
rgba#
rgb#
bgr#
gbra#
grba#
bgra#
brga#
rbga#
BINORMAL0#
BINORMAL1#
BINORMAL2#
BINORMAL3#
BINORMAL4#
BINORMAL5#
BINORMAL6#
BINORMAL7#
BLENDINDICES0#
BLENDINDICES1#
BLENDINDICES2#
BLENDINDICES3#
BLENDWEIGHT0#
BLENDWEIGHT1#
BLENDWEIGHT2#
BLENDWEIGHT3#
COLOR#
COLOR0#
COLOR1#
COLOR2#
COLOR3#
NORMAL#
NORMAL0#
NORMAL1#
NORMAL2#
NORMAL3#
NORMAL4#
NORMAL5#
NORMAL6#
NORMAL7#
S_DEPTH_GE_OUTPUT#
S_DEPTH_LE_OUTPUT#
S_DEPTH_OUTPUT#
S_INSTANCE_ID#
S_POINT_COORD#
S_POINT_SIZE#
S_POSITION#
S_SAMPLE_INDEX#
S_TARGET_OUTPUT#
S_TARGET_OUTPUT0#
S_TARGET_OUTPUT1#
S_TARGET_OUTPUT2#
S_TARGET_OUTPUT3#
S_TARGET_OUTPUT4#
S_TARGET_OUTPUT5#
S_TARGET_OUTPUT6#
S_TARGET_OUTPUT7#
S_VERTEX_ID#
TANGENT0#
TANGENT1#
TANGENT2#
TANGENT3#
TEXCOORD0#
TEXCOORD1#
TEXCOORD2#
TEXCOORD3#
TEXCOORD4#
TEXCOORD5#
TEXCOORD6#
TEXCOORD7#
FOG#
register#
packoffset#
b0#
b1#
b2#
b3#
b4#
b5#
b6#
b7#
b8#
b9#
b10#
b11#
b12#
b13#
b14#
s0#
s1#
s2#
s3#
s4#
s5#
s6#
s7#
t0#
t1#
t2#
t3#
t4#
t5#
t6#
t7#
c0#
c1#
c2#
c3#
c4#
c5#
c6#
c7#
c8#
c9#
c10#
c11#
c12#
c13#
c14#
c15#
c16#
c17#
c18#
c19#
c20#
c21#
c22#
c23#
c24#
c25#
c26#
c27#
c28#
c29#
c30#
c31#
c32#
c33#
c34#
c35#
c36#
c37#
c38#
c39#
c40#
c41#
c42#
c43#
c44#
c45#
c46#
c47#
c48#
c49#
c50#
c51#
c52#
c53#
c54#
c55#
c56#
c57#
c58#
c59#
c60#
c61#
c62#
c63#
c64#
c65#
c66#
c67#
c68#
c69#
c70#
c71#
c72#
c73#
c74#
c75#
c76#
c77#
c78#
c79#
c80#
c81#
c82#
c83#
c84#
c85#
c86#
c87#
c88#
c89#
c90#
c91#
c92#
c93#
c94#
c95#
c96#
c97#
c98#
c99#
c100#
c101#
c102#
c103#
c104#
c105#
c106#
c107#
c108#
c109#
c110#
c111#
c112#
c113#
c114#
c115#
c116#
c117#
c118#
c119#
c120#
c121#
c122#
c123#
c124#
c125#
c126#
c127#
c128#
c129#
c130#
c131#
c132#
c133#
c134#
c135#
c136#
c137#
c138#
c139#
c140#
c141#
c142#
c143#
c144#
c145#
c146#
c147#
c148#
c149#
c150#
c151#
c152#
c153#
c154#
c155#
c156#
c157#
c158#
c159#
c160#
c161#
c162#
c163#
c164#
c165#
c166#
c167#
c168#
c169#
c170#
c171#
c172#
c173#
c174#
c175#
c176#
c177#
c178#
c179#
c180#
c181#
c182#
c183#
c184#
c185#
c186#
c187#
c188#
c189#
c190#
c191#
c192#
c193#
c194#
c195#
c196#
c197#
c198#
c199#
c200#
c201#
c202#
c203#
c204#
c205#
c206#
c207#
c208#
c209#
c210#
c211#
c212#
c213#
c214#
c215#
c216#
c217#
c218#
c219#
c220#
c221#
c222#
c223#
c224#
c225#
c226#
c227#
c228#
c229#
c230#
c231#
c232#
c233#
c234#
c235#
c236#
c237#
c238#
c239#
c240#
c241#
c242#
c243#
c244#
c245#
c246#
c247#
c248#
c249#
c250#
MAX_VS_LIGHTS#
MATRIX_VIEW#
MATRIX_PROJECTION#
MATRIX_WORLD#
MATRIX_WORLD_VIEW#
MATRIX_WORLD_VIEW_PROJECTION#
MATRIX_MAX#



// GameMaker special
gm_BaseTexture
gm_BaseTextureObject
gm_Matrices
gm_LightingEnabled
gm_VS_FogEnabled
gm_FogStart
gm_RcpFogRange
gm_PS_FogEnabled
gm_FogColour
gm_AlphaTestEnabled
gm_AlphaRefValue

gm_AmbientColour
gm_Lights_Direction
gm_Lights_PosRange
gm_Lights_Colour

abs(x)
acos(x)
all(x)
any(x)
asin(x)
atan(x)
atan2(y,x)
ceil(x)
clamp(x,min,max)
clip(x)
cos(x)
cosh(x)
cross(a,b)
D3DCOLORtoUBYTE4(x)
ddx9x
ddy(x)
degrees(x)
determinant(m)
distance(a,b)
dot(a,b)
exp(x)
exp2(a)
faceforward(n,i,ng)
floor(x)
fmod(a,b)
frac(x)
frexp(x,exp)
fwidth(x)
isfinite(x)
isinf(x)
isnan(x)
ldexp(x,exp)
len(x)
length(x)
lerp(a,b,s)
lit(n_dot_l, n_dot_h, m)
log(x)
log10(x)
log2(x)
max(a,b)
min(a,b)
modf(x.ip)
mul(a,b)
noise(x)
normalize(v)
pow(x,y)
radians(x)
reflect(i,n)
refract(i,n,eta)
round(x)
rsqrt(x)
Sample(s,t)
Sample(s,t,o)
SampleBias(s,t,b)
SampleBias(s,t,b,o)
SampleCmp(s,t)
SampleCmp(s,t,o)
SampleCmpLevelZero(s,t)
SampleCmpLevelZero(s,t,o)
SampleGrad(s,t,ddx,ddy)
SampleGrad(s,t,ddx,ddy,o)
SampleLevel(s,t,l)
SampleLevel(s,t,l,o)
saturate(x)
sign(x)
sin(x)
sincos(x,s,c)
sinh(x)
smoothstep(min,max,x)
sqrt(x)
step(a,x)
tan(x)
tanh(x)
transpose(m)
trunc(x)


//noise4(val) 
//randomize()
//choose(x1,x2,x3,...)

