<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGhostMoving</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//shadow switches
if(global.dayNight &lt;= 5 * 120){
    shadow = 0;
}
else if(global.dayNight &lt;= 7 * 120){
    shadow = 1;
}
else if(global.dayNight &lt;= 18 * 120){
    shadow = 0;
}
else if(global.dayNight &lt;= 20 * 120){
    shadow = 1;
}
else{
    shadow = 0;
}

//the initial y for floating control
oriY = y;
//float 8 px
while(y &gt;= oriY - 8) y -= 1;
oriY = y;

//random moving hspeed
spd = 0.6 * choose(1,-1);
hspeed = spd;
image_xscale = sign(hspeed);

/*
if(mode == 2) {
    hspeed = spd;
    image_xscale = sign(hspeed);
}
*/

image_speed = 0.1;

//not hitting any bullet
if(!instance_exists(objBullet)){
    backHit = 0;
    faceHit = 0;
    dir = 0;
}
else if(instance_place(x,y,objBullet)){
    dir = sign(objBullet.hspeed);
    //use the value to control the hit back effect
    backHit = (sign(hspeed) == dir) * 2;
    faceHit = (sign(hspeed) != dir) * 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shadow control


if(global.dayNight &lt;= 5 * 120){
    shadow = 0;
}
else if(global.dayNight &lt;= 7 * 120){
    shadow = 1;
}
else if(global.dayNight &lt;= 18 * 120){
    shadow = 0;
}
else if(global.dayNight &lt;= 20 * 120){
    shadow = 1;
}
else{
    shadow = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///floating and bullet behaviour
b = instance_place(x + hspeed, y, objBlock);

if(!shadow &amp;&amp; objDayNight.dayNight == 120){
    if(faceHit){
        sprite_index = sprGhostHit;
        if(instance_place(x + hspeed + (faceHit * dir),y,objBlock) == noone)
            x += (faceHit * dir);
        faceHit -= 1;
    }
    else if(backHit){
        sprite_index = sprGhostTurn;
        if(instance_place(x + hspeed + (backHit * dir),y,objBlock) == noone)
            x += (backHit * dir);
        backHit -= 1;
        hspeed = -dir * abs(hspeed);
        spd = hspeed;
    }
    else {
        sprite_index = sprGhostMoving;
        image_xscale = sign(hspeed);
    }
}




if(b != noone){
    move_contact_solid(b,abs(hspeed));
    hspeed = -hspeed;
    spd = hspeed;
    image_xscale = sign(hspeed);
    faceHit = 0;
    backHit = 0;
}

//vertical floating

//height is updated every 8 frames
if(!shadow){
    if(objDayNight.dayNight == 120){
        if(!(global.dayNight mod 8))y += 4 * sin(global.dayNight);
        hspeed = spd;
        image_xscale = sign(hspeed);
    }
    else{
        if(abs(y - oriY) &gt; 1){
            y -= sign(y - oriY);
        }
        else {
            y = oriY;
            hspeed = spd;
            image_xscale = sign(hspeed);
        }
    }
}
else hspeed = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//

if (!shadow &amp;&amp; objDayNight.dayNight == 120){
    dir = sign(other.hspeed);
    //knock back 5 px
    backHit = (dir == sign(hspeed)) * 2;
    faceHit = (!backHit);
    audio_play_sound(sndBossHit,0,0);
    
    with(other) instance_destroy();
}
else exit;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//

if(!shadow &amp;&amp; objDayNight.dayNight == 120)scrKillPlayer();
else exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//night = 120 = ghost
//day = 0 = shadow

if(global.dayNight &gt; 7 * 120 &amp;&amp; global.dayNight &lt;= 18 * 120){
    //day time
    if(instance_exists(objPlayer))depth = objPlayer.depth + 1;
    else depth = -20;
}


//draw_sprite_ext(sprGhostMoving, 0, x, y, image_xscale, 1, 0, c_white, objDayNight.dayNight / 120);
//draw_sprite_ext(sprShadowMoving, 0, x, y, image_xscale, 1, 0, c_white, (120 - objDayNight.dayNight)/120);

if(objDayNight.dayNight != 120){
    draw_sprite_ext(sprGhostMoving, 0, x, y, image_xscale, 1, 0, c_white, objDayNight.dayNight / 120);
    draw_sprite_ext(sprShadowMoving, 0, x, y, image_xscale, 1, 0, c_white, (120 - objDayNight.dayNight)/120);
}
else{
    alpha = cos(global.dayNight / 20) + 1;
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
