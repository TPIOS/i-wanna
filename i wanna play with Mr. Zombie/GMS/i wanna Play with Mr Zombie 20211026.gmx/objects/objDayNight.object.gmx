<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-90000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//one room should exist only 1 object of this kind 
if(instance_number(objDayNight) &gt; 1)instance_destroy();

//for clock
//1h = 120f
//24h = 2880f


//default 08:00 - at day
//day = 0;
//night = 1;

day = (global.dayNight &gt;= 110 * 5 &amp;&amp; global.dayNight &lt; 110 * 18);
night = !day;

//dayNight
//max 120
//min 0
//dayNight = 120 * !night;
/*
if(global.dayNight &gt; 120 * 5 &amp;&amp; global.dayNight &lt; 120 * 7){
    dayNight = 120 - (global.dayNight - 120 * 5)/2;
}
else if(global.dayNight &lt; 120 * 18){
    dayNight = 0;
}
else if(global.dayNight &lt; 120 * 20){
    dayNight = (global.dayNight - 120 * 18)/2;
}
else dayNight = 120;
*/
if(global.dayNight &lt;= 110 * 5)dayNight = 110;
else if(global.dayNight &lt;= 7 * 110)dayNight = 120 - (global.dayNight - 110 * 5) / 2;
else if(global.dayNight &lt;= 18 * 110)dayNight = 0;
else if(global.dayNight &lt;= 20 * 110)dayNight = (global.dayNight - 110 * 18) / 2;
else dayNight = 110;

surf = surface_create(room_width, room_height);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf)){
    surface_free(surf);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!surface_exists(surf)){
    surf = surface_create(room_width, room_height);
}


//time = (time + 1) mod 2880;
global.dayNight = (global.dayNight + 1) mod 2880;

//1h = 120f
//00:00 = time 0
if(global.dayNight &gt;= 120 * 5 &amp;&amp; global.dayNight &lt; 120 * 18){
    if(!day){
        day = 1;
        night = 0;
    }
    //take 240f to change from night to day
    //from 5 oclock to 7
    
    if(global.dayNight &lt; 120 * 7){
        /*
        if(global.dayNight % 2 == 0){
            if(dayNight &gt; 0)
                dayNight -= 1;
            else dayNight = 0;
        }
        */        
        if(dayNight &gt; 0){
            if(global.dayNight % 2 == 0){
                dayNight -= 1;
            }
        }
        else dayNight = 0;
    }
    else{
        dayNight = 0;
    }
}
else{
    if(!night){
        day = 0;
        night = 1;
    }
    //from 18 oclock to 20
    if(global.dayNight &lt; 120 * 20){
        /*
        if(global.dayNight % 2 == 0){
            if(dayNight &lt; 120)
                dayNight += 1;
            else dayNight = 120;
        }
        */
        if(dayNight &lt; 120){
            if(global.dayNight % 2 == 0){
                dayNight += 1;
            }
        }
        else dayNight = 120;
    }
    else{
        dayNight = 120;
    }
}

//uni_dayNight = dayNight;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug function - change clock time
if(keyboard_check_pressed(vk_pagedown)){
    global.dayNight += 120;
}

if(keyboard_check_pressed(vk_pageup)){
    global.dayNight -= 120;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!surface_exists(surf))surf = surface_create(room_width, room_height);

//surface_copy(surf,0,0,application_surface);

//c1 - top left - rg(0,0.2)b(0,0.8)
//c2 - top right - rg(0,0.2)b(0,0.8)
//c3 - bottom right - rg(0,0.2)b(0,0.2)
//c4 - bottom left - rg(0,0.2)b(0,0.2)

rg = 1 - (dayNight/150);
b1 = 1 - (dayNight/200);
b2 = 1 - (dayNight/200);
b3 = 1 - (dayNight/150);
b4 = 1 - (dayNight/150);

c1 = make_colour_rgb(rg*255,rg*255,b1*255)
c2 = make_colour_rgb(rg*255,rg*255,b2*255)
c3 = make_colour_rgb(rg*255,rg*255,b3*255)
c4 = make_colour_rgb(rg*255,rg*255,b4*255)


surface_set_target(surf);

//reset surface, and copy appsur to the blank surface
draw_clear_alpha(c_black,0);
surface_copy(surf,0,0,application_surface);




if(dayNight == 120){
    with(objWGhost){
        alpha = cos(global.dayNight / 20) + 1;
        draw_sprite_ext(sprite_index, 0, x, y, image_xscale, 1, 0, c_white, 
        alpha * 0.5);
    }    
}




//dig out the light part from the surf

draw_set_blend_mode_ext(bm_zero,bm_inv_src_alpha);

with(objTorchLight){
    //draw_sprite_ext(sprTorchMask,0,x + 16,y + 16,0.5,0.5,0,c_white,alpha);
    draw_sprite_ext(sprTorchMask,0,x + 16,y + 8,0.5,0.5,0,c_white,alpha);
}

draw_set_blend_mode(bm_normal);




surface_reset_target();

//draw_surface_general(application_surface, 0,0, room_width, room_height,0,0,1,1,0,c1,c2,c3,c4,1);

draw_surface_general(surf, 0,0, room_width, room_height,0,0,1,1,0,c1,c2,c3,c4,1);

with(objRedkid){
var drawX = x;
var drawY = y;
if (global.grav == -1)
drawY += 1;
draw_sprite_ext(sprite_index,image_index,drawX,drawY,image_xscale*xScale,image_yscale*global.grav,image_angle,c_red,image_alpha);
}
with(objDayBlock)draw_self();
with(objZombie_Dirt01)draw_self();
with(objZombie_Dirt02)draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
