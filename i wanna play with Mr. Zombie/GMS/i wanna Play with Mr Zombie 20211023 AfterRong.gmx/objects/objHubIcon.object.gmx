<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_number(object_index) &gt; 1)instance_destroy();

iconList[1] = sprJushiIcon;
iconList[2] = sprRedCrownIcon;
iconList[3] = sprZeroyumeIcon;
iconList[4] = sprYolomanyIcon;
iconList[5] = sprQinchuiIcon;
iconList[6] = sprRongIcon;
iconList[7] = sprNeedleRushIcon;

bgList[1] = bJushi;
bgList[2] = bRC;
bgList[3] = bgForest;
bgList[4] = background6;
bgList[5] = bgQCbackground2;
bgList[6] = bRongDayTimeHub;
bgList[7] = bgMainHub;

//timer for changing sprites and backgrounds
timer = 0;

//default index = 0 for hub default skin
icon = 0;
text = "";
bg = noone;

spr = noone;
hasntDraw = true;

//alpha for showing the icon and text
alpha = 0;
//alpha = 1;

c = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.secretItem[BOMB] = false;
global.secretItem[LIGHT] = false;
global.secretItem[BANSHOOT] = false;
global.secretItem[GM] = false;

for(var i = 1; i &lt;= 16; i++)
    global.secretItem[i] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room != rHub)instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.levelItem[6] and !global.secretItem[GMBACK]) {
    bgList[6] = bRongDarkTimeHub;
}
if(global.levelItem[6] and global.secretItem[GMBACK]) {
    bgList[6] = bRongDayTimeHub;
}
if(global.levelItem[3]) {
    bgList[3] = bgZoulv;
}

//position for showing the icon
drawX = 384;
drawY = 480;

//drawTextX = 352 + 48;
//drawTextY = 288 - 32;

var color = c_black;

empty = sprite_index != iconList[1] and
        sprite_index != iconList[2] and
        sprite_index != iconList[3] and
        sprite_index != iconList[4] and
        sprite_index != iconList[5] and
        sprite_index != iconList[6] and
        sprite_index != iconList[7];

//draw_set_font(fHub);
//draw_set_halign(fa_center);

if(icon == 0){
    if(alpha &gt; 0){
        alpha -= 0.04;
        if(!empty){
            draw_background_ext(bg,0,0,1,1,0,c_white,alpha)
            
            //draw_sprite(sprHubContainer,0,drawTextX - 48,drawTextY);
        
            draw_sprite_ext(sprite_index,0,drawX,drawY,1,1,0,c_white,alpha);
            //draw_text_colour(drawTextX,drawTextY,text,color, color, color, color,alpha);
        }
    }
    else{
        draw_background_ext(bgMainHub,0,0,1,1,0,c_white,1)
        alpha = 0;
        sprite_index = noone;
        //draw_sprite(sprHubContainer,0,drawTextX - 48, drawTextY);
        //draw_text_colour(drawTextX,drawTextY,"生日快乐",color, color, color, color,1);
    }
}
else{
    if(empty){
        sprite_index = iconList[icon];
        //text = textList[icon];
        bg = bgList[icon];
    }
    if(sprite_index != iconList[icon]){
        //transferring from current to new icon
        if(timer &lt; 25){
            spr = iconList[icon];
            
            draw_background_ext(bg,0,0,1,1,0,c_white,1 - (timer)/25);
            draw_background_ext(bgList[icon],0,0,1,1,0,c_white,timer / 25)
            
            //draw_sprite(sprHubContainer,0,drawTextX - 48,drawTextY);
            
            //sprite transferring
            draw_sprite_ext(sprite_index,0,drawX,drawY,1,1,0,c_white,1-(timer)/25);
            draw_sprite_ext(spr,0,drawX,drawY,1,1,0,c_white,(timer)/25);
            
            //text transferring
            //draw_text_colour(drawTextX,drawTextY,text,color, color, color, color,1 - (timer)/ 25);
            //draw_text_colour(drawTextX,drawTextY,textList[icon],color, color, color, color,timer / 25);
            
            //increment timer
            timer += 1;
        }
        else{
            //change background
            draw_background_ext(bgList[icon],0,0,1,1,0,c_white,alpha)
            bg = bgList[icon];
            //draw_sprite(sprHubContainer,0,drawTextX - 48,drawTextY);
        
            //change sprite_index
            sprite_index = iconList[icon];
            draw_sprite_ext(sprite_index,0,drawX,drawY,1,1,0,c_white,1);
            //change the text to show
            //text = iconList[icon];
            //draw_text_colour(drawTextX,drawTextY,textList[icon],color, color, color, color,1);
            //text = iconList[icon];
            
            
            
            alpha = 1;
            timer = 0;
        }
    }
    else{
        if(timer &gt; 0){
            draw_background_ext(bg,0,0,1,1,0,c_white,(timer)/25);
            draw_background_ext(bgList[icon],0,0,1,1,0,c_white,1 - (timer)/25);
            
            //draw_sprite(sprHubContainer,0,drawTextX - 48,drawTextY);
               
            draw_sprite_ext(spr,0,drawX,drawY,1,1,0,c_white,(timer)/25);
            draw_sprite_ext(sprite_index,0,drawX,drawY,1,1,0,c_white,1-(timer)/25);
            
            //draw_text_colour(drawTextX,drawTextY,text,color, color, color, color,1 - (timer)/ 25);
            //draw_text_colour(drawTextX,drawTextY,textList[icon],color, color, color, color,timer / 25);            

            
            timer -= 1;
        }
        else{
            timer = 0;
            spr = noone;
            //text = textList[icon];
            if(alpha &lt; 1){
                alpha += 0.04;
                draw_background_ext(bgList[icon],0,0,1,1,0,c_white,alpha);
                
                //draw_sprite(sprHubContainer,0,drawTextX - 48,drawTextY);
                
                //draw_text_colour(drawTextX,drawTextY, text, color, color, color, color, alpha);
                draw_sprite_ext(sprite_index,0,drawX,drawY,1,1,0,c_white,alpha);
            }
            else {
                alpha = 1;
                
                draw_background_ext(bgList[icon],0,0,1,1,0,c_white,alpha);
                
                //draw_sprite(sprHubContainer,0,drawTextX - 48,drawTextY);
                
                //draw_text_colour(drawTextX,drawTextY, text, color, color, color, color, alpha);
                draw_sprite_ext(sprite_index,0,drawX,drawY,1,1,0,c_white,alpha);
            }
            
        }
    }
    
    
}




//draw_set_font(fDefault18);
//draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
