<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// States 'constants'
TakeSourceScreenshot = 0;
TakeTargetScreenshot = 1;
PerformTransition = 2;

// Initial State
State = TakeSourceScreenshot;

// Target room
TargetRoom = -1;

// 
if (instance_number(self) &lt;= 1) {
    Screenshot1 = surface_create(800, 608);
    Screenshot2 = surface_create(800, 608);
} else {
    instance_destroy();
}

TransitionCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(Screenshot1);
surface_free(Screenshot2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (State) {
    case TakeSourceScreenshot:
        surface_set_target(Screenshot1);
        draw_clear(0);
        draw_set_blend_mode_ext(bm_dest_alpha, bm_dest_alpha);
        draw_surface(application_surface, 0, 0);
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
        room_goto(TargetRoom);
        State = TakeTargetScreenshot;
    break;
    case TakeTargetScreenshot:
        surface_set_target(Screenshot2);
        draw_clear(0);
        draw_set_blend_mode_ext(bm_dest_alpha, bm_dest_alpha);
        draw_surface(application_surface, 0, 0);
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
        instance_deactivate_all(true);
        if (surface_exists(Screenshot1)) {
            draw_surface(Screenshot1, 0, 0);
        }
        State = PerformTransition;
    break;
    case PerformTransition:
        /*
        if (surface_exists(Screenshot2)) {
            draw_surface(Screenshot2, 0, 0);
        }
        if (surface_exists(Screenshot1)) {
            draw_surface_ext(Screenshot1, 0, 0, 1, 1, 0, c_white, 1 - TransitionCounter);
        }
        */
        
        //effect
        //first half shot1 truns black
        //rest shot2 turns visible
        
        if(TransitionCounter &lt;= 0.5){
            draw_surface_ext(Screenshot1, 0, 0, 1, 1, 0, c_white, 1 - 2 * TransitionCounter);
        }
        else{
            draw_surface_ext(Screenshot2, 0, 0, 1, 1, 0, c_white, 2 * TransitionCounter - 1);
        }
        
        TransitionCounter += 0.01;
        if (TransitionCounter &gt;= 1) {
            instance_activate_all();
            instance_destroy(); 
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
