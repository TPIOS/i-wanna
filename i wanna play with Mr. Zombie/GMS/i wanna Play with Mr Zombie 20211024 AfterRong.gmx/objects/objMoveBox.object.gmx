<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMoveBox</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-60</depth>
  <persistent>0</persistent>
  <parentName>objBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>push_speed = 3;
fall_speed = 4;
pushable = true;

// for shoot
tempx=x;
hs=3; // change the speed here
move_len=32;//move length after hit
shooted=false;
bullet_dir=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(objPlayer)){
    if(y+31&lt;objPlayer.y-12 &amp;&amp; vspeed!=0) solid=0 else solid=1
}

if(pushable and instance_exists(objPlayer)){
    if(place_meeting(x-objPlayer.hspeed,y,objPlayer)){
        if (place_free(x+sign(objPlayer.hspeed)*push_speed,y)){
            hspeed=sign(objPlayer.hspeed)*push_speed
        }
        else if(place_free(x+sign(objPlayer.hspeed),y)) hspeed = sign(objPlayer.hspeed)
        else hspeed = 0;
    }else{
        if(!shooted) hspeed=0;
    }
}

if(place_meeting(x,y+1,objBlock)){
    vspeed=0
}else{
    vspeed=fall_speed
}

if(vspeed!=0){
    if(place_meeting(x,y+vspeed,objPlayer)){
        with(objPlayer) scrKillPlayer()
    }
}

// stop the block as it moves 32px

if(shooted){
    // x+hs&gt;needed
    if (bullet_dir*((x+(hspeed))-(tempx+move_len*bullet_dir))&gt;0){
        hspeed=sign(hspeed);
    }
    // x+1=needed
    if (bullet_dir*((x+sign(hspeed))-(tempx+move_len*bullet_dir))&gt;0){
        shooted = false;
        // x=tempx+move_len*bullet_dir;
        hspeed=0;
    }
    // dist &lt; hs
    if(!place_free(x+hspeed,y) and place_free(x,y)) hspeed=sign(hspeed);
    // x+1 meet
    if(!place_free(x+sign(hspeed),y)){
        shooted = false;
        hspeed=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// shoot event
if(place_free(x+sign(other.hspeed),y)){
    bullet_dir=sign(other.hspeed)
    tempx = x;
    hspeed = hs*bullet_dir;
    shooted = true;
}

// double check
if(shooted){
    // move needed length
    if (bullet_dir*((x+sign(hspeed))-(tempx+move_len*bullet_dir))&gt;0){
        shooted = false;
        // x=tempx+move_len*bullet_dir;
        hspeed=0;
    }
    // dist &lt; hs
    if(!place_free(x+hspeed,y) and place_free(x,y)) hspeed=sign(hspeed);
    // x+1 meet
    if(!place_free(x+sign(hspeed),y)){
        shooted = false;
        hspeed=0;
    }
}

with(other) instance_destroy()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
