<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDarkness</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumplen = 100;
curstate = 0;

ShootGen = 0;

//RNG = 0;
enum state {
    Init,
    Shooting,
    Death,
    Purify,
    Count
}

//xx=2784;
//yy=1152 -&gt; 768;

// Already Opened
if(y==768){
 if(global.secretItem[BANSHOOT]) {
    curstate = state.Shooting;
    image_xscale = 2;
    image_yscale = 2;
 }
 else instance_destroy();
}
// Opened from box
else curstate = state.Init;

maxrate = 40;
minrate = 10;
range = 600;

dist = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ShootGen+=1;
//move_bounce_solid(false);
//if(hp&lt;=0 or RNG&gt;2000) curstate = state.Death;
event_user(curstate)
//if(x&gt;2944) vspeed=-2;
//if(x&lt;2656) vspeed=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Purity

if(x&gt;400){
    move_towards_point(400, 1520, point_distance(x,y,400,1520)/10+1);
}
else{
    speed = 0;
    if(image_alpha&gt;0) image_alpha-=0.01;
    if(image_xscale&gt;1) image_xscale-=0.01;
    if(image_yscale&gt;1) image_yscale-=0.01;
}

if(image_alpha&lt;=0){
    if(place_meeting(x,y,objPlayer)){
        global.secretItem[BANSHOOT]=false;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death
global.secretItem[BANSHOOT]=false;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// direct to player
if(instance_exists(objPlayer) and !instance_exists(objGun)) {
    dist = point_distance(x,y,objPlayer.x,objPlayer.y)
    if (dist&lt;range){
        if(ShootGen &gt;= minrate+(maxrate-minrate)*dist/range){
            bullet = instance_create(x,y,objCherry);
            bullet.speed = 5;
            bullet.direction=point_direction(x,y,objPlayer.x,objPlayer.y);
            ShootGen = 0;
        }
    }
}
if(instance_exists(objBomb)){
    if(distance_to_object(objBomb)&lt;1.5*32){
        if (objBomb.exploded=true) curstate = state.Death;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init jump
if(jumplen&gt;=0){
    jumplen-=1;
    y-=2;
    image_xscale+=0.01;
    image_yscale+=0.01;
    if(jumplen==0){
        instance_create(x,y,objDarknessGen);
        instance_create(x,y,objRongBossBomb);
        instance_destroy(objRongBossSpawner)
        instance_destroy(objBoxBack);
    }
}
else if(jumplen&lt;0 and y&gt;768-16) y-=2;
else{
    instance_create(x,y,objDarknessManger);
    curstate=state.Shooting;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white)
draw_text(64,32,"Distance: "+string(dist))
draw_text(64,32*2,"Current State: "+string(curstate))
draw_text(64,32*3,"ShootGen: "+string(ShootGen))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprDarkness,0,x,y,image_xscale,image_yscale,0,image_blend,image_alpha)
draw_sprite_ext(sprPurity,0,x,y,image_xscale,image_yscale,0,image_blend,1-image_alpha)
if(instance_exists(objPlayer)) dir = point_direction(x,y,objPlayer.x,objPlayer.y)
else dir = 0;
if(curstate = state.Shooting and !instance_exists(objGun)){
    draw_sprite_ext(sprGun, 0, x+48*cos(dir*pi/180), y-48*sin(dir*pi/180), 4, 4, dir, image_blend,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
