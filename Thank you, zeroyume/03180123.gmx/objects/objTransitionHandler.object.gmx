<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TakeSourceScreenshot = 0
TakeTargetScreenshot = 1
PerformTransition = 2
State = TakeSourceScreenshot
TargetRoom = -1
if (instance_number(id) &lt;= 1)
{
    //Screenshot1 = surface_create(800, 608)
    Screenshot1 = surface_create(surface_get_width(application_surface),surface_get_height(application_surface));    //create new surface
    //Screenshot2 = surface_create(800, 608)
    Screenshot2 = surface_create(surface_get_width(application_surface),surface_get_height(application_surface));    //create new surface
}
else
    instance_destroy()
TransitionCounter = 0
next = 0

//show_message("");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(Screenshot1)
surface_free(Screenshot2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch State
{
    case TakeSourceScreenshot:
        surface_set_target(Screenshot1)
        draw_clear(c_black)
        draw_set_blend_mode_ext(7, 7)
        draw_surface(application_surface, 0, 0)
        draw_set_blend_mode(0)
        surface_reset_target()
        if(next != 0){
            //room_goto_next();
            TargetRoom = room_next(room);
            //instance_destroy();
            room_goto(TargetRoom)
        }
        else{
            room_goto(TargetRoom);
        }
        State = TakeTargetScreenshot
        break
    case TakeTargetScreenshot:
        surface_set_target(Screenshot2)
        draw_clear(c_black)
        draw_set_blend_mode_ext(7, 7)
        draw_surface(application_surface, 0, 0)
        draw_set_blend_mode(0)
        surface_reset_target()
        instance_deactivate_all(true)
        if surface_exists(Screenshot1)
            draw_surface(Screenshot1, 0, 0)
        State = PerformTransition
        break
    case PerformTransition:
        
        /*
        if (TransitionCounter &lt; 0.5){
            if(surface_exists(Screenshot1)){
                draw_rectangle_colour(0,0,room_width,room_height,c_black,c_black,c_black,c_black,0);
                draw_surface_ext(Screenshot1, 0, 0, 1, 1, 0, 16777215, (1 - 2 * TransitionCounter));
            }
        }
        else if (TransitionCounter &lt; 1){
            if(surface_exists(Screenshot2)){
                //instance_activate_all();
                draw_rectangle_colour(0,0,room_width,room_height,c_black,c_black,c_black,c_black,0);
                draw_surface_ext(Screenshot2, 0, 0, 1, 1, 0, 16777215, 2 * (TransitionCounter - 0.5));
            }
        }
        */
        
        draw_surface_ext(Screenshot1, 0, 0, 1, 1, 0, 16777215, 1 - TransitionCounter);
        draw_surface_ext(Screenshot2, 0, 0, 1, 1, 0, 16777215, TransitionCounter);

        TransitionCounter += 0.02;
        //TransitionCounter += 0.01;
        if (TransitionCounter &gt;= 1){
            instance_activate_all();
            instance_destroy();
        }
        break;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
